trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  resourcegroup: 'aml-demo'
  workspace: 'aml-demo'
  aml_compute_target: 'cpu-cluster'
  pipeline_name: 'training-pipeline'
  dataset: 'german-credit-dataset'
  dataset_mountpath: '/data'
  
  # Azure Resource Manager connection created during pipeline creation
  azure_service_connection_name: 'aml_accelarator_svc_conn'

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'   

- task: Bash@3
  displayName: 'Install Requirements'
  inputs:
    targetType: filePath
    filePath: 'automation/install_requirements.sh'
    workingDirectory: 'automation'

- task: AzureCLI@2
  displayName: 'Install the CLI'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az extension add -n azure-cli-ml

- task: AzureCLI@2
  displayName: 'Attach folder to workspace'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az ml folder attach -w $(workspace) -g $(resourcegroup)

- task: AzureCLI@2
  displayName: 'Get or create AML Compute Target'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      az ml computetarget create amlcompute -n $(aml_compute_target) --min-nodes 0 --max-nodes 1 -s STANDARD_D3_V2

- task: AzureCLI@2
  displayName: 'Deploy pipeline to AML'
  inputs:
    azureSubscription: '$(azure_service_connection_name)'
    scriptLocation: inlineScript
    scriptType: bash
    inlineScript: |
      python pipelines-python/train/pipeline.py --pipeline_name=$(pipeline_name) --build_number=$(Build.BuildNumber) --dataset=$(dataset) --dataset_mountpath=$(dataset_mountpath) --runconfig=$(Build.SourcesDirectory)/pipelines-python/train/pipeline.runconfig --source_directory=$(Build.SourcesDirectory)/src/model1
